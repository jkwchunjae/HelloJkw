@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<dynamic>
@{
	Layout = "Layout.cshtml";
}

<div>
	<input type="text" id="new-room-name" />
	<button class="btn btn-success" id="create-room">방 만들기</button>
</div>
<div id="console">

</div>

@section Css
{
<style type="text/css">
	#console {
		position: fixed;
		top: 80px;
		left: 10px;
		z-index: -1;
	}
</style>
}

@section Javascript
{
<script type="text/javascript">
	$("nav.navbar").addClass("navbar-shrink");
	$("li#menu-games").addClass("active");

	$(document).ready(function () {
		var ws = new WebSocket("ws://localhost:55591/colorconquer");
		//var ws = new WebSocket("ws://hellojkw.com:55591/colorconquer");

		var Log = function (message) {
			var p = document.createElement('p');
			$(p).text(message);
			$('#console').prepend(p);
		}

		ws.onopen = function (e) {
			var message = {
				packetType: 'TryEnterChannel',
				UserName: 'TestName'
			};
			var data = JSON.stringify(message);
			Log('send: ' + data);
			ws.send(data);
		};

		ws.onmessage = function (e) {
			Log('recv: ' + e.data);
			var obj = JSON.parse(e.data);
			processPacket(obj);
		};

		ws.onerror = function (e) {
			Log('error: ' + e.message);
		};

		ws.onclose = function (e) {
			Log('close: ' + e.code);
		};

		$("#create-room").click(function () {
			var roomName = $('#new-room-name').val();
			var obj = {
				packetType: 'TryCreateRoom',
				RoomName: roomName
			};
			sendMessage(obj);
		});

		var sendMessage = function (obj) {
			var data = JSON.stringify(obj);
			ws.send(data);
		}

		var processPacket = function (obj) {
			switch (obj.packetType) {
				case 'ResultEnterChannel':
					RequestRoomList();
					break;
				case 'ResultRoomList':
					ResultRoomList(obj.data);
					break;
			}
		}

		var RequestRoomList = function () {
			var obj = {
				packetType: 'RequestRoomList'
			};
			sendMessage(obj);
		}

		var ResultRoomList = function (data) {
			
		}
	});
</script>
}

@section JavascriptRelease
{
}